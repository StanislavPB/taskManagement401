
Объяснение:

Метод @BeforeEach setUp() инициализирует новый экземпляр ProjectRepository перед каждым тестом.

В тесте addProjectTest() создается новый ProjectDto, который передается в метод addProject.
После добавления проекта мы используем метод findById для получения только что добавленного проекта и проверяем,
соответствует ли он ожиданиям.

Тест updateProjectDescription_Success добавляет проект в репозиторий, а затем пытается обновить его описание.
После обновления проверяется, что метод вернул true и что описание проекта было успешно изменено.

Тест updateProjectDescription_Failure_ProjectNotFound пытается обновить описание проекта,
которого нет в репозитории (с ID 99 в данном случае). В этом случае ожидается, что метод вернет false,
что указывает на то, что проект для обновления не был найден.

В тесте findById_ProjectExists добавляется новый проект в репозиторий,
после чего осуществляется попытка его поиска по ID.
Тест проверяет, что проект успешно найден и его данные соответствуют ожиданиям.

В тесте findById_ProjectDoesNotExist пытаемся найти проект с ID, который заведомо не был добавлен в репозиторий.
Тест проверяет, что в этом случае метод findById возвращает пустой Optional,
тем самым указывая на отсутствие проекта с таким ID.

В тесте findAll_WithNoProjects проверяет, что findAll() возвращает пустой список, если в репозитории нет проектов.

В тесте findAll_WithProjects проверяет, что findAll() возвращает список всех добавленных проектов.
В этом тесте добавляются два проекта, и ожидается, что размер возвращаемого списка будет равен двум.

В тесте findAllActiveProjects убеждаемся, что метод корректно возвращает список только активных проектов,
исключая завершенные. В ходе теста добавляются два проекта,
один из которых затем помечается как завершенный, и проверяется,
что метод findAllActiveProjects возвращает только незавершенный проект.





